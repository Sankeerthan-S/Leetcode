/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        int max = Integer.MIN_VALUE;
        int max_level =1;
        Queue<TreeNode> list = new LinkedList<>();
        list.add(root);
        int level =1;
        while(!list.isEmpty()){
            int num = list.size();
            int sum = 0;
            for (int i =0;i<num;i++){
                TreeNode tree = list.poll();
                if (tree.left!=null){
                    list.add(tree.left);
                }
                if (tree.right!=null){
                    list.add(tree.right);
                }
                sum += tree.val;

            }
            if (sum>max){

                max = sum;
                max_level = level;
            }
            level++;
        }
        return max_level;
    }
}
